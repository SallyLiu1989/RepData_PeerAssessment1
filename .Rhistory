hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5)
abline(h=1.5, col='blue')
abline(h=0.4, col='blue')
abline(h=0.4, col='red')
5
abline(h=0.05)
12
abline(h=0.05, col='green')
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
mt
heatmpa(mt)
heatmap(mt)
mt
plot(denmt)
distmt
swirl()
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x, y, cx, cy)
apply(distTemp, 2, which.min)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTemp2, 2, which.min)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols[newClust2])
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(datafRrame, centers=3)
kmeans(dataframe, centers=3)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2 )
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
?image
swirl()
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
library(swirl)
swirl()
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activities)
table(ssd$activity)
sub1 <- subset(ssd, subject=1)
sub1 <- subset(ssd, subject==1)
dim(sub())
dim(sub1
)
names(sub1)[1:12]
bye()
library(swirl)
swirl()
kClust <- kmeans(sub1[,-c(562,563)], centers=6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
kClust$centers[laying, 1:12, pch=19, ylab="Laying Cluster"]
kClust$centers[laying, 1:12, pch=19, ylab="Laying Cluster")
plot(kClust$centers[laying, 1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names([[1]][wol])
names(pm0) <- make.names(cnames[[1]][wol])
names(pm0) <- make.names(cnames[[1]][cwol])
names(pm0) <- make.names(cnames[[1]][wcl])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(xo)
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates<- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
intersect(site0, site1)
both <- intersect(site0, site1)
both
head(pm0)
cn0 <- subset(pm0, Country.Code==26 & county.site %in% both)
cn0 <- subset(pm0, County.Code==26 & county.site %in% both)
cnt0 <- subset(pm0, County.Code==26 & county.site %in% both)
cnt0 <- subset(pm0, State.Code==26 & county.site %in% both)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(median(x0sub, na.rm=TRUE))
abline(h=median(x0sub, na.rm=TRUE))
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
merge(d0, d1, by="state")
mrg <- merge(d0, d1, by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrp[,2], rep(2,52), mrp[,3])
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
install.packages("twitteR")
install.packages("ROAuth")
library("twitteR")
library("ROAuth")
download.file(url="http://curl.haxx.se/ca/cacert.pem",destfile="cacert.pem")
cred <- OAuthFactory$new(consumerKey='Ou1e3UtAyQz0F0MY0dkOWulmj',
consumerSecret='LIwKBrCtckg25BsKrUXx9ATrRL3uqv3dwZDEKbnPS2LKZzS96z',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
cred$handshake(cainfo="cacert.pem")
cred$handshake(cainfo="cacert.pem")
cred$handshake(cainfo="cacert.pem")
save(cred, file="twitter authentication.Rdata")
load("twitter authentication.Rdata")
registerTwitterOAuth(cred)
setup_twitter_oauth(CUSTOMER_KEY, CUSTOMER_SECRET, ACCESS_TOKEN, ACCESS_secret, credentials_file=NULL)
setup_twitter_oauth(CUSTOMER_KEY, CUSTOMER_SECRET, ACCESS_TOKEN, ACCESS_secret)
setup_twitter_oauth(Ou1e3UtAyQz0F0MY0dkOWulmj, LIwKBrCtckg25BsKrUXx9ATrRL3uqv3dwZDEKbnPS2LKZzS96z, kfNT8rvodzsYGnfbSH0MozSSKAsnxg2ejdXhd0qH, YSUeZPl9k0Zmzi9hrdBGesXrkdO0OuGFlznVxOPfVBlqy)
consumer_key <- 'Ou1e3UtAyQz0F0MY0dkOWulmj'
consumer_secret <- 'LIwKBrCtckg25BsKrUXx9ATrRL3uqv3dwZDEKbnPS2LKZzS96z'
access_token <- '483044017-kfNT8rvodzsYGnfbSH0MozSSKAsnxg2ejdXhd0qH'
access_secret <- 'YSUeZPl9k0Zmzi9hrdBGesXrkdO0OuGFlznVxOPfVBlqy'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search.string <- '#nba'
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, cainfo="cacert.pem", lang="en")
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
tweets
search.string <- 'Crizal'
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
tweets <- searchTwitter(search.string, lang="en")
tweets
search.string <- 'crizal'
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
tweets <- searchTwitter('essilor', n=no.of.tweets, lang="en")
view(tweets)
View(tweets)
head(tweets)
tweets <- searchTwitter('shungiku', n=no.of.tweets, lang="en")
tweets
tweets <- searchTwitter('&#26149;&#33738;', n=no.of.tweets, lang="en")
tweets
tweets <- searchTwitter('&#26149;&#33738;', n=no.of.tweets)
head(tweets)
tweets <- searchTwitter('&#28459;&#30011;', n=no.of.tweets)
head(tweets)
library("twitteR")
library("ROAuth")
load("twitter authentication.Rdata")
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
registerTwitterOAuth(cred)
consumer_key <- 'Ou1e3UtAyQz0F0MY0dkOWulmj'
consumer_secret <- 'LIwKBrCtckg25BsKrUXx9ATrRL3uqv3dwZDEKbnPS2LKZzS96z'
access_token <- '483044017-kfNT8rvodzsYGnfbSH0MozSSKAsnxg2ejdXhd0qH'
access_secret <- 'YSUeZPl9k0Zmzi9hrdBGesXrkdO0OuGFlznVxOPfVBlqy'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search.string <- "varilux"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets)
tweets.test <- sapply(tweets, function(x) x$getTest())
tweets.test <- sapply(tweets, function(x) x$getText())
View(tweets.test)
tweets
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
search.string <- 'marukawashoten'
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="jp")
tweets <- searchTwitter(search.string, n=no.of.tweets)
head(tweets)
getUser('marukawashoten')
u <- getUser('marukawashoten')
u$followersCount
u$favoritesCount
favorites(u)
u$followersCount
u$created
u$description
u$followRequestSent
u$friendsCount
u$id
u$lastStatus
timelines(u, n=20)
userTimeline(u, n=20)
library("twitteR")
library("ROAuth")
consumer_key <- 'Ou1e3UtAyQz0F0MY0dkOWulmj'
consumer_secret <- 'LIwKBrCtckg25BsKrUXx9ATrRL3uqv3dwZDEKbnPS2LKZzS96z'
access_token <- '483044017-kfNT8rvodzsYGnfbSH0MozSSKAsnxg2ejdXhd0qH'
access_secret <- 'YSUeZPl9k0Zmzi9hrdBGesXrkdO0OuGFlznVxOPfVBlqy'
load("twitter authentication.Rdata")
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
search.string <- "crizal"
tweets <- searchTwitter(search.string, n=no.of.tweets)
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets)
write.csv(tweets, 'crizal100')
write.csv('crizal100', tweets)
class(tweets)
write.table(tweets, file='crizal100')
tweets.text <- sapply(tweets, function(x) x$getText())
write.table(tweets.text, file='crizal100')
write.csv(tweets.text, file='crizal100.csv')
tweets <- searchTwitter(“#nba”, n=1499, cainfo=”cacert.pem”, lang=”en”)
tweets <- searchTwitter('#nba', n=1499, lang='en')
tweets.text <- sapply(tweets, function(x) x$getText())
tweets.text <- tolower(tweets.text)
Replace blank space (“rt”)
tweets.text <- gsub("rt", "", tweets.text)
#convert all text to lower case
tweets.text <- tolower(tweets.text)
# Replace @UserName
tweets.text <- gsub("@\\w+", "", tweets.text)
Remove punctuation
tweets.text <- gsub("[[:punct:]]", "", tweets.text)
tweets.text <- tolower(tweets.text)
tweets.text <- gsub("http\\w+", "", tweets.text)
tweets.text <- gsub("[ |\t]{2,}", "", tweets.text)
tweets.text <- gsub("^ ", "", tweets.text)
tweets.text <- gsub(" $", "", tweets.text)
write.csv(tweets.text, file='crizal100.csv')
install.packages("tm")
library("tm")
tweets.text.corpus <- Corpus(VectorSource(tweets.text))
tweets.text.corpus <- tm_map(tweets.text.corpus, function(x)removeWords(x,stopwords()))
install.packages("wordcloud")
library("word cloud")
library("wordcloud")
wordcloud(tweets.text.corpus,min.freq = 2, scale=c(7,0.5),colors=brewer.pal(8, "Dark2"),  random.color= TRUE, random.order = FALSE, max.words = 150)
source('connectTwitter.R')
source('wordcloud.R')
search.string <- "&#23478;&#22770;&#12427;&#12458;&#12531;&#12490;"
no.of.tweets <- 1499
tweets <- searchTwitter(search.string, n=no.of.tweets, lang='en')
tweets.text <- sapply(tweets, function(x) x$getText())
source('wordcloud.R')
source('wordcloud.R')
source('wordcloud.R')
source('wordcloud.R')
source('wordcloud.R')
source('wordcloud.R')
source('wordcloud.R')
source('wordcloud.R')
head(tweets.text)
library("twitteR")
library("ROAuth")
consumer_key <- 'Ou1e3UtAyQz0F0MY0dkOWulmj'
consumer_secret <- 'LIwKBrCtckg25BsKrUXx9ATrRL3uqv3dwZDEKbnPS2LKZzS96z'
access_token <- '483044017-kfNT8rvodzsYGnfbSH0MozSSKAsnxg2ejdXhd0qH'
access_secret <- 'YSUeZPl9k0Zmzi9hrdBGesXrkdO0OuGFlznVxOPfVBlqy'
load("twitter authentication.Rdata")
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
user1 <- getUser('marukawashoten')
user1$created
summary(user1)
str(user1)
user1
user1$followersCount
user1$location
user1$show()
fo <- user1$getFollowers()
fo <- user1$getFollowerIDs()
fo <- user1$getFollowerIDs()
user1$statusesCount
library("twitteR")
library("ROAuth")
consumer_key <- 'Ou1e3UtAyQz0F0MY0dkOWulmj'
consumer_secret <- 'LIwKBrCtckg25BsKrUXx9ATrRL3uqv3dwZDEKbnPS2LKZzS96z'
access_token <- '483044017-kfNT8rvodzsYGnfbSH0MozSSKAsnxg2ejdXhd0qH'
access_secret <- 'YSUeZPl9k0Zmzi9hrdBGesXrkdO0OuGFlznVxOPfVBlqy'
load("twitter authentication.Rdata")
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
user1 <- getUser('marukawashoten')
user2 <- getUser('yukarikoume')
user2$getStatusesCount()
user1$getStatusesCount()
tm <- userTimeline(user1)
tm
tm <- userTimeline(user1, n=3200)
tm[30[]
tm[30
]
tm <- userTimeline(user1, n=100)
lengh(tm)
length(tm)
tm[30]
tm[31]
user1$lastStatus
?':'
fo <- user1$getFollowerIDs()
?difference
??diff
library(data.table)
dt1 <- data.table(fo)
View(dt1)
user2 <- 'twittakarai'
user2 <- getUser('twittakarai')
dt2 <- data.table(user2$getFollowerIDs())
dt2 <- data.table(user2$getFollowerIDs())
write.ftable(dt1, 'user1.csv')
write.table(dt1, 'user1.csv')
write.table(dt1, 'user1.csv', row.names = FALSE)
library("twitteR")
library("ROAuth")
consumer_key <- 'Ou1e3UtAyQz0F0MY0dkOWulmj'
consumer_secret <- 'LIwKBrCtckg25BsKrUXx9ATrRL3uqv3dwZDEKbnPS2LKZzS96z'
access_token <- '483044017-kfNT8rvodzsYGnfbSH0MozSSKAsnxg2ejdXhd0qH'
access_secret <- 'YSUeZPl9k0Zmzi9hrdBGesXrkdO0OuGFlznVxOPfVBlqy'
load("twitter authentication.Rdata")
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
user2 <- getUser('twittakarai')
user2$getStatusesCount()
fo <- user2$getFollowerIDs()
fo <- user2$setStatusesCount(100)
user2$setStatusesCount(100)
user2$setFollowersCount(100)
setFollowersCount(user2, 100)
list.files
list.files()
installed.packages()
df <- read.csv('raw.csv')
str(df)
df1 <- read.csv('raw.csv', n=1)
?read.csv
df <- read.csv('raw.csv', colClasses = c(rep('factor', 27), rep('numeric', 20)))
c(rep('factor', 27), rep('numeric', 20))
region <- df$MktRegionNEW
class(region)
summary(region)
entity <- df$OrgBU
summary(entity)
design <- df$Design
index <- df$Index
library(dplyr)
country <- df$MktCountryNEW
total_lens <- tbl_df(region, country, entity, design, index)
total_lens <- tbl_df(data.frame(region, country, entity, design, index))
recordtype <- df$RecordType
total_lens <- tbl_df(data.frame(region, country, entity, design, index, recordtype))
total_lens <- filter(recordtype==2)
total_lens <- filter(recordtype=2)
?filter
total_lens <- filter(total_lens, recordtype==2)
month <- df$ReportingDate
total_lens <- tbl_df(data.frame(month, region, country, entity, design, index, recordtype))
total_lens <- filter(total_lens, recordtype==2)
head(total_lens)
ytd_ly <- df$YTD_PCS_LY
ytd_cy <- df$YTD_PCS_CY
total_lens <- tbl_df(data.frame(month, region, country, entity, design, index, recordtype, ytd_ly, ytd_cy))
total_lens <- filter(total_lens, recordtype==2)
head(total_lens)
total_lens <- select(total_lens, -recordtype)
head(total_lens)
total_lens <- mutate(ytd_ly=as.numeric(ytd_ly), ytd_cy=as.numeric(ytd_cy))
total_lens <- mutate(total_lens, ytd_ly=as.numeric(ytd_ly), ytd_cy=as.numeric(ytd_cy))
head(total_lens)
boxplot(df$ytd_cy~month+region)
boxplot(ytd_cy~month+region, data=total_lens)
boxplot(ytd_cy~month, data=total_lens)
boxplot(ytd_cy~design, data=subset(total_lens, month='Jun 2016'))
boxplot(ytd_cy~design+index, data=subset(total_lens, month='Jun 2016'))
library(qqplot2)
library(ggplot2)
?ggplot2
??ggplot2
library(lattice)
bwplot(ytd_cy~design+index, data=subset(total_lens, month='Jun 2016'))
dev.cur()
barplot(ytd_cy)
barplot(select(total_lens, month, ytd_cy))
barplot(ytd_cy~month)
boxplot(ytd_cy~month)
?barplot
barplot(1,3,5)
barplot(c(1,3,5))
head(mtcars)
g <- ggplot(mpg, aes(disp, hwy))
g+geom_point()
data("mtcars")
g <- ggplot(mpg, aes(disp, hwy))
data("mtcars")
g <- ggplot(mpg, aes(disp, hwy))
g+geom_point()
attach(data(mtcars))
attach(data('mtcars'))
attach(mtcars)
g <- ggplot(mpg, aes(disp, hwy))
View(mtcars)
library(kernlab)
names(spam)
data(spam)
names(spam)
install.packages("rmarkdown")
getwd()
list.files
list.files()
??xls
library(gdata)
install.packages("gdata")
library(gdata)
?EXCEL
??excel
?error
??error
setwd("C:/Users/sally.liu/Downloads/coursera/datascience/RepData_PeerAssessment1")
list.files()
source("RRProject1.R")
setwd("C:/Users/sally.liu/Downloads/coursera/datascience")
source("RepData_PeerAssessment1/RRproject1.R")
setwd("C:/Users/sally.liu/Downloads/coursera/datascience/RepData_PeerAssessment1")
mean(steps.per.day.new$sum.steps)
median(steps.per.day.new$sum.steps)
levels(new.df$day.type)
summary(new.df$day.type)
class(new.df$day.type)
str(new.df$day.type)
unclass(levels(new.df$day.type))
head(new.df)
qplot(sum.steps, data=steps.per.day, labs(title="Histogram of Total Steps per Day"))
qplot(sum.steps, data=steps.per.day) + labs(title="Histogram of Total Steps per Day")
qplot(sum.steps, data=steps.per.day) +
labs(title="Histogram of Total Steps per Day", xlab = "Total number of Steps")
qplot(sum.steps, data=steps.per.day) +
labs(title="Histogram of Total Steps per Day") + xlab("Total number of Steps")
qplot(sum.steps, data=steps.per.day) +
labs(title="Histogram of Total Steps per Day") +
xlab("Total number of Steps") +
ylab("Count of Days")
ggplot(steps.per.intv.new, aes(interval, avg.steps)) + geom_line() + facet_grid(day.type ~ .)
ggplot(steps.per.intv, aes(interval, avg.steps)) + geom_line() +
labs(x = "Interval#", y = "Average number of Steps", title = "Average Daily Activity")
dim(new.df)
dim(steps.per.day)
dim(steps.per.day.new)
?tbl_df
t1 <- data.frame(type="original data", data=steps.per.day$sum.steps)
head(t1)
t2 <- data.frame(type="NAs filled with average", data=steps.per.day.new$sum.steps)
head(t2)
t <- cbind(t1, t2)
head(t)
t <- rbind(t1, t2)
head(t)
View(t)
qplot(data,data=t,fill=type)
qplot(t$data,data=t,fill=type)
qplot(t$data,data=t,fill=type)+geom_line()
qplot(t$data,data=t,fill=type)+geom_line(y=mean(t$data))
qplot(data,data=t,fill=type)
qplot(data,data=t,facets=.~type)
